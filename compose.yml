services:
    db:
        image: postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        image: redis
        ports:
            - "6379:6379"

    anycable-go:
        image: anycable/anycable-go
        depends_on:
            redis:
                condition: service_started
        environment:
            ANYCABLE_REDIS_URL: "redis://redis:6379/1"
            ANYCABLE_RPC_HOST: "anycable:50051"
            ANYCABLE_DEBUG: "true"
            ANYCABLE_HOST: 0.0.0.0
            ANYCABLE_PUBLIC: true
        ports:
            - "8080:8080"

    server:
        build: ./api
        command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]
        ports:
            - "3000:3000"
        env_file: "./api/.env"
        environment:
            POSTGRES_HOST: db
            REDIS_URL: redis://redis:6379
            RUN_MIGRATIONS: true
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started

    worker:
        build: ./api
        command: ["bundle", "exec", "sidekiq"]
        env_file: "./api/.env"
        environment:
            POSTGRES_HOST: db
            REDIS_URL: redis://redis:6379
            RUN_MIGRATIONS: false
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started

    anycable:
        build: ./api
        command: ["bundle", "exec", "anycable"]
        env_file: "./api/.env"
        environment:
            POSTGRES_HOST: db
            REDIS_URL: redis://redis:6379
            RUN_MIGRATIONS: false
            ANYCABLE_REDIS_URL: "redis://redis:6379"
            ANYCABLE_RPC_HOST: "anycable:50051"
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started
